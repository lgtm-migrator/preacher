label: Request examples

default:
  request: /echo
  response:
    status_code: 200

cases:
  - label: Sends headers
    request:
      headers:
        header-string: xxx
        Header-String: yyy
        user-agent: custom
        null-value: null
        empty-string: ''
    response:
      headers:
        - describe:
            key: content-type
          should:
            equal: application/json
        - describe:
            key: content-length
            cast_to: int
          should:
            be_greater_than: 100
      body:
        - describe: .headers."Header-String"
          should:
            equal: yyy
        - describe: .headers."User-Agent"
          should:
            equal: custom
        - describe: .headers."Null-Value"
          should: be_null
        - describe: .headers."Empty-String"
          should:
            - not: be_null
            - be_empty

  - label: Sends params as a string
    request:
      params: key=value&spam=ham%26eggs
    response:
      body:
        - describe: .args.key
          should:
            contain_exactly:
              - value
        - describe: .args.spam
          should:
            contain_exactly:
              - ham&eggs

  - label: Sends params as a mapping
    request:
      params:
        key: value
        multi-key:
          - null  # should be ignored.
          - str
          - false
          - 1
          - 1.2
          - 2020-01-23T12:34:56
          - 2020-04-01 01:23:45 +09:00
          - !relative_datetime -6 hours
          - !relative_datetime
            delta: +1 day
            format: '%Y-%m-%dT00:00:00Z'
          - !context starts
    response:
      body:
        - describe: .args.key
          should:
            contain_exactly:
              - equal: value
        - describe: .args."multi-key"
          should:
            contain_exactly:
              - equal: str
              - equal: "false"
              - equal: "1"
              - equal: "1.2"
              - equal: '2020-01-23T12:34:56'
              - all_of:
                  - equal: '2020-04-01T01:23:45+09:00'
                  - be_before: now
              - all_of:
                  - be_before: now
                  - be_after: -12 hours
              - all_of:
                  - match_regexp: '\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z'
                  - be_after: now
              - be_after: -1 second

  - label: Sends a POST request with a urlencoded body
    request:
      method: POST
      params:
        key: value
      body:
        data:
          foo: bar
          spam:
            - ham
            - egg
          dt: !relative_datetime -1 second
    response:
      body:
        - describe: .method
          should:
            - equal: POST
        - describe: .headers."Content-Type"
          should:
            - equal: application/x-www-form-urlencoded
        - describe: .args.key
          should:
            - contain_exactly:
                - value
        - describe: .form.foo
          should:
            - contain_exactly:
                - bar
        - describe: .form.spam
          should:
            - contain_exactly:
                - ham
                - egg
        - describe: .form.dt[0]
          should:
            - be_before: now
        - describe: .json
          should: be_null

  - label: Sends a DELETE request with a JSON body
    request:
      method: delete
      body:
        type: json
        data:
          foo: bar
          spam:
            - ham
            - egg
          dt:
            - !relative_datetime +1 second
            - !relative_datetime
              delta: +1 day
              format: '%Y-%m-%dT00:00:00Z'
    response:
      body:
        - describe: .method
          should:
            - equal: DELETE
        - describe: .headers."Content-Type"
          should:
            - equal: application/json
        - describe: .json.foo
          should:
            - equal: bar
        - describe: .json.spam
          should:
            - contain_exactly:
                - ham
                - egg
        - describe: .json.dt
          should:
            - contain_exactly:
                - be_after: now
                - all_of:
                    - match_regexp: '\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z'
                    - be_after: now
        - describe: .form
          should:
            - equal: {}
