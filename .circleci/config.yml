version: 2.1

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-38:
          filters:
            tags:
              only: /.*/
      - test-37:
          filters:
            tags:
              only: /.*/
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
          requires:
            - test-38
            - test-37

jobs:
  test-38:  # Primary
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - install-poetry
      - prepare-production-env
      - bootstrapping-test
      - prepare-development-env
      - unit-test
      - example-test
      - document-build

  test-37:  # Secondary
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - install-poetry
      - prepare-production-env
      - bootstrapping-test
      - prepare-development-env
      - unit-test
      - example-test
      - document-build

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - install-poetry
      - run:
          name: Build
          command: poetry build
      - run:
          name: Publish
          command: poetry publish

commands:
  install-poetry:
    description: Install Poetry
    steps:
      - run:
          name: Install Poetry
          command: curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
  prepare-production-env:
    description: Prepare production environment
    steps:
      - run:
          name: Install libraries for production
          command: poetry install --no-dev
  prepare-development-env:
    description: Prepare development environment
    steps:
      - run:
          name: Install libraries for development
          command: |
            poetry install
  bootstrapping-test:
    description: Bootstrapping test
    steps:
      - run:
          name: Bootstrapping test
          command: |
            poetry run preacher-cli --version
            poetry run preacher-cli --help
  unit-test:
    description: Unit test
    steps:
      - run:
          name: Unit test
          command: |
            poetry run pytest
            poetry run codecov
  example-test:
    description: Example test
    steps:
      - run:
          name: Example test
          command: |
            poetry run python3 examples/server.py > examples/server.log 2>&1 &
            sleep 5

            # Run normal scenarios.
            poetry run preacher-cli \
              -vv \
              -uhttp://localhost:5000 \
              -Rreport/ \
              ./examples/scenario/success.yml

            # Run plugin scenarios.
            poetry run preacher-cli \
              -vv \
              -uhttp://localhost:5000 \
              -pexamples/plugin/custom_matcher.py \
              ./examples/scenario/plugin.yml

            # Run plugin scenarios with installation.
            poetry run pip install ./examples/plugin
            poetry run preacher-cli \
              -vv \
              -uhttp://localhost:5000 \
              ./examples/scenario/plugin.yml

            ls report/
            cat examples/server.log
  document-build:
    description: Build documents
    steps:
      - run:
          name: Build documents
          command: poetry run make html
